/*  Eternal Power Calculator - https://github.com/matt-kimball/epc  */
"use strict";function factorialSlow(n){var i,r;r=1;for(i=n;i>1;i-=1){r=r*i}return r}var factorialLookup={};function buildFactorialLookup(){var i;for(i=0;i<100;i+=1){factorialLookup[i]=factorialSlow(i)}}buildFactorialLookup();function factorial(n){if(n<100){return factorialLookup[n]}return factorialSlow(n)}function binomial(n,k){if(k>n){return 0}return factorial(n)/factorial(k)/factorial(n-k)}function makeInfluence(influenceString){var i,chr,digit,influence={power:0,fire:0,justice:0,primal:0,shadow:0,time:0,wild:0};for(i=0;i<influenceString.length;i+=1){chr=influenceString[i];if(chr.charCodeAt(0)>="0".charCodeAt(0)&&chr.charCodeAt(0)<="9".charCodeAt(0)){digit=Number(chr);if(influence.power>0){influence.power=influence.power*10+digit}else{influence.power=digit}}else if(chr==="F"){influence.fire+=1}else if(chr==="J"){influence.justice+=1}else if(chr==="P"){influence.primal+=1}else if(chr==="S"){influence.shadow+=1}else if(chr==="T"){influence.time+=1}else if(chr==="X"){influence.wild+=1}else{influence.makeError='Invalid influence: "'+influenceString+'"'}}influence.zero=function(){influence.power=0;influence.fire=0;influence.justice=0;influence.primal=0;influence.time=0;influence.shadow=0;influence.wild=0};influence.isEmpty=function(){if(influence.power>0){return false}if(influence.fire>0||influence.justice>0||influence.primal>0||influence.time>0||influence.shadow>0||influence.wild>0){return false}return true};influence.toString=function(){var str;if(influence.power>0){str=String(influence.power)}else{str=""}str=str+"F".repeat(influence.fire);str=str+"T".repeat(influence.time);str=str+"J".repeat(influence.justice);str=str+"P".repeat(influence.primal);str=str+"S".repeat(influence.shadow);str=str+"X".repeat(influence.wild);return str};influence.relevantTo=function(target){if(influence.power>0&&target.power>0){return true}if(influence.fire>0&&target.fire>0){return true}if(influence.justice>0&&target.justice>0){return true}if(influence.primal>0&&target.primal>0){return true}if(influence.shadow>0&&target.shadow>0){return true}if(influence.time>0&&target.time>0){return true}if(influence.wild>0){if(target.fire>0||target.justice>0||target.primal>0||target.shadow>0||target.time>0){return true}}return false};influence.add=function(count,other){influence.power+=count*other.power;influence.fire+=count*other.fire;influence.justice+=count*other.justice;influence.primal+=count*other.primal;influence.shadow+=count*other.shadow;influence.time+=count*other.time;influence.wild+=count*other.wild};influence.mask=function(target){var masked=makeInfluence("");if(target.power>0){masked.power=influence.power}if(target.fire>0){masked.fire=influence.fire}if(target.justice>0){masked.justice=influence.justice}if(target.primal>0){masked.primal=influence.primal}if(target.shadow>0){masked.shadow=influence.shadow}if(target.time>0){masked.time=influence.time}if(target.fire>0||target.justice>0||target.primal>0||target.shadow>0||target.time>0||target.wild>0){masked.wild=influence.wild}return masked};influence.equals=function(other){return other.power===influence.power&&other.fire===influence.fire&&other.justice===influence.justice&&other.primal===influence.primal&&other.shadow===influence.shadow&&other.time===influence.time&&other.wild===influence.wild};influence.compare=function(other){if(influence.power!==other.power){return influence.power-other.power}if(influence.wild!==other.wild){return influence.wild-other.wild}if(influence.shadow!==other.shadow){return influence.shadow-other.shadow}if(influence.primal!==other.primal){return influence.primal-other.primal}if(influence.justice!==other.justice){return influence.justice-other.justice}if(influence.time!==other.time){return influence.time-other.time}if(influence.fire!==other.fire){return influence.fire-other.fire}return 0};influence.satisfies=function(target){var unsatisfied=0;if(influence.power<target.power){return false}if(influence.fire<target.fire){unsatisfied+=target.fire-influence.fire}if(influence.justice<target.justice){unsatisfied+=target.justice-influence.justice}if(influence.primal<target.primal){unsatisfied+=target.primal-influence.primal}if(influence.shadow<target.shadow){unsatisfied+=target.shadow-influence.shadow}if(influence.time<target.time){unsatisfied+=target.time-influence.time}if(influence.wild<unsatisfied){return false}return true};influence.listComponents=function(){var part,components=[];if(influence.power>0){part=makeInfluence("");part.power=influence.power;components.push(part)}if(influence.fire>0){part=makeInfluence("");part.fire=influence.fire;components.push(part)}if(influence.time>0){part=makeInfluence("");part.time=influence.time;components.push(part)}if(influence.justice>0){part=makeInfluence("");part.justice=influence.justice;components.push(part)}if(influence.primal>0){part=makeInfluence("");part.primal=influence.primal;components.push(part)}if(influence.shadow>0){part=makeInfluence("");part.shadow=influence.shadow;components.push(part)}return components};return influence}function makeEternalCardInfo(id,name,influenceGenerated,influenceRequired,flags){var card={id:id,name:name,influenceRequirements:[],flags:{}};card.influenceGenerated=makeInfluence(influenceGenerated);if(card.influenceGenerated&&card.influenceGenerated.makeError){card.makeError=card.influenceGenerated.makeError}$.each(influenceRequired.split(","),function(index,str){var influence=makeInfluence(str);if(influence){if(influence.makeError){card.makeError=influence.makeError}else if(!influence.isEmpty()){card.influenceRequirements.push(influence)}}});$.each(flags,function(index,flag){card.flags[flag]=true});return card}function makeEternalCardLibrary(cards){var library={cards:{}};function addCardInfo(line){var re,match,card,id,name,influenceGenerated,influenceRequired,flags;line=line.trim();if(line.length<=0){return}re=/(Set[0-9]+ #[0-9]+);([^;]*);([^;]*);([^;]*);([^;]*)/;match=line.match(re);if(!match){library.makeError='Invalid card info: "'+line+'"';return}id=match[1];influenceGenerated=match[2].trim();influenceRequired=match[3].trim();name=match[4].trim();flags=match[5].split(",").map(function(str){return str.trim()});card=makeEternalCardInfo(id,name,influenceGenerated,influenceRequired,flags);if(card.makeError){library.makeError=card.makeError+' in "'+line+'"'}library.cards[id]=card}$.each(cards.split("\n"),function(index,line){if(library.makeError){return library}addCardInfo(line)});return library}function makeDrawCombinationIterator(deck,cardGroups,maxCards,influence){var iter,workingInfluence;iter={cardGroups:cardGroups,cardGroupCount:[],cardGroupInfluence:[],current:[],done:false};workingInfluence=makeInfluence("");function incrementCurrent(){var index,count;index=iter.current.length-1;while(index>=0){count=iter.cardGroupCount[index];iter.current[index]+=1;if(iter.current[index]<=count){return}iter.current[index]=0;index-=1}iter.done=true}function drawSatisfiesInfluence(){var i,groupInfluence,count;workingInfluence.zero();for(i=0;i<cardGroups.length;i+=1){groupInfluence=iter.cardGroupInfluence[i];count=iter.current[i];workingInfluence.add(count,groupInfluence)}return workingInfluence.satisfies(influence)}function currentCount(){var i,count;count=0;for(i=0;i<cardGroups.length;i+=1){count+=iter.current[i]}return count}iter.next=function(){while(!iter.done){incrementCurrent();if(currentCount()<=maxCards&&drawSatisfiesInfluence()){break}}if(iter.done){return{done:true}}return{value:iter.current.slice(),done:false}};$.each(cardGroups,function(index,value){var groupInfluence,count;iter.current.push(0);count=0;$.each(cardGroups[index],function(cardIndex,card){groupInfluence=card.influenceGenerated;count+=deck.cardCount[card.id]});iter.cardGroupCount.push(count);iter.cardGroupInfluence.push(groupInfluence)});return iter}function makeEternalDeck(cardlibrary,inCardlist){var deck,cardlist;function mergeCardlist(inCardlist){var ret,cardcountId;ret=[];cardcountId={};$.each(inCardlist,function(index,cardcount){var dupCardcount;dupCardcount=cardcountId[cardcount.id];if(dupCardcount){dupCardcount.count+=cardcount.count}else{dupCardcount={id:cardcount.id,name:cardcount.name,count:cardcount.count};ret.push(dupCardcount);cardcountId[cardcount.id]=dupCardcount}});return ret}cardlist=mergeCardlist(inCardlist);deck={cardlibrary:cardlibrary,cardlist:cardlist,cards:[],cardNames:{},cardCount:{}};function addCardCount(cardcount){var cardid,card,count,i;cardid=cardcount.id;card=cardlibrary.cards[cardid];if(!card){deck.makeError='unknown card: "'+cardid+'"';return}for(i=0;i<cardcount.count;i+=1){deck.cards.push(card)}deck.cardNames[cardid]=cardcount.name;count=cardcount.count;if(deck.cardCount[cardid]){count+=deck.cardCount[cardid]}deck.cardCount[cardid]=count}deck.listInfluenceRequirements=function(){var influenceDict,influenceList,cards;cards=deck.cards.slice();cards.sort(function(a,b){var infA,infB,powerDiff;infA=a.influenceRequirements[0];infB=b.influenceRequirements[0];if(!infA&&!infB){return a.id.localeCompare(b.id)}if(!infA){return-1}if(!infB){return 1}powerDiff=infA.power-infB.power;if(powerDiff){return powerDiff}return a.id.localeCompare(b.id)});influenceList=[];influenceDict={};$.each(cards,function(index,card){$.each(card.influenceRequirements,function(index,influence){var influenceStr,influencePair;influenceStr=influence.toString();influencePair=influenceDict[influenceStr];if(influencePair){influencePair[1].push(card);return}influencePair=[influence,[card]];influenceList.push(influencePair);influenceDict[influenceStr]=influencePair})});influenceList.sort(function(a,b){var infA,infB,infCompare,lowIdA,lowIdB;infA=a[0];infB=b[0];infCompare=infA.compare(infB);if(infCompare){return infCompare}lowIdA=a[1][0].id;lowIdB=b[1][0].id;$.each(a[1],function(index,card){if(card.id.localeCompare(lowIdA)<0){lowIdA=card.id}});$.each(b[1],function(index,card){if(card.id.localeCompare(lowIdB)<0){lowIdB=card.id}});return lowIdA.localeCompare(lowIdB)});return influenceList};function listDrawCombinations(influence,maxCards){var relevantCards,cardGroups;relevantCards=[];$.each(Object.getOwnPropertyNames(deck.cardCount),function(index,id){var card;card=deck.cardlibrary.cards[id];if(card.influenceGenerated&&card.influenceGenerated.relevantTo(influence)){relevantCards.push(card)}});cardGroups=[];$.each(relevantCards,function(index,card){var foundGroup=false;$.each(cardGroups,function(index,group){var groupCard,groupInfluence,cardInfluence;if(foundGroup){return}groupCard=group[0];groupInfluence=groupCard.influenceGenerated.mask(influence);cardInfluence=card.influenceGenerated.mask(influence);if(groupInfluence.equals(cardInfluence)){group.push(card);foundGroup=true}});if(!foundGroup){cardGroups.push([card])}});return makeDrawCombinationIterator(deck,cardGroups,maxCards,influence)}function oddsForCombination(cardGroupCount,combination,drawCount){var odds,count,totalMatch,totalDeckMatch,deckCount,i;odds=1;totalMatch=0;totalDeckMatch=0;for(i=0;i<combination.length;i+=1){count=combination[i];deckCount=cardGroupCount[i];odds=odds*binomial(deckCount,count);totalDeckMatch+=deckCount;totalMatch+=count}odds=odds*binomial(deck.cards.length-totalDeckMatch,drawCount-totalMatch);odds=odds/binomial(deck.cards.length,drawCount);return odds}function gatherTotalInfluence(){var influence;influence=makeInfluence("");$.each(deck.cards,function(index,card){if(card.influenceGenerated){influence.add(1,card.influenceGenerated)}});return influence}deck.drawOdds=function(drawCount,influence){var drawCombinations,combinationIter,odds;if(drawCount>=deck.cards.length){if(gatherTotalInfluence().satisfies(influence)){return 1}return 0}drawCombinations=listDrawCombinations(influence,drawCount);odds=0;while(true){combinationIter=drawCombinations.next();if(combinationIter.done){break}odds=odds+oddsForCombination(drawCombinations.cardGroupCount,combinationIter.value,drawCount)}return odds};deck.listPowerInfluenceSources=function(){var ret,used;ret=[];used={};$.each(deck.cards,function(index,card){var influence;if(used[card.id]){return}influence=card.influenceGenerated;if(!influence.isEmpty()){ret.push(card)}used[card.id]=true});return ret};deck.generateDecklist=function(forExport){var decklist;decklist="";$.each(deck.cardlist,function(index,cardcount){var cardline;if(!cardcount.count&&forExport){return}cardline=String(cardcount.count)+" "+cardcount.name+" ("+cardcount.id+")";decklist+=cardline+"\n"});return decklist};$.each(cardlist,function(index,cardcount){addCardCount(cardcount)});return deck}function makeEternalDeckFromString(library,deckstr){var deck,cardcounts,makeError,regex,marketRegex,inMarket;cardcounts=[];regex=/^([0-9]+) (.+) \((Set[0-9]+ #[0-9]+)\)$/;marketRegex=/^-+MARKET-+$/;$.each(deckstr.split("\n"),function(index,line){var re,match,count,name,cardid;line=line.trim();if(line.length<=0){return}if(line.match(marketRegex)){inMarket=true}if(inMarket){return}match=line.match(regex);if(!match){makeError='malformed line: "'+line+'"';return}count=Number(match[1]);name=match[2];cardid=match[3];if(count>100){makeError='too many cards: "'+line+'"';return}cardcounts.push({id:cardid,name:name,count:count})});deck=makeEternalDeck(library,cardcounts);if(makeError){deck.makeError=makeError}return deck}"use strict";function makeGraphPopupTracker(){var tracker,graphPopupAnchor,graphPopup,popupDot,graphDots,maxDistance,mergeDistance;tracker={};maxDistance=25;mergeDistance=12;function hideGraphPopup(event){if(graphPopupAnchor){graphPopupAnchor.popup("destroy");graphPopupAnchor.remove();graphPopup.remove();popupDot=undefined}}function findCloseDots(pos){var maxDist2,dots,bestDot,bestDist2;function calculateDistance2(dot,point){var dx,dy;dx=point.x-dot.pos.x;dy=point.y-dot.pos.y;return dx*dx+dy*dy}maxDist2=maxDistance*maxDistance;bestDist2=maxDist2;$.each(graphDots,function(index,dot){var dist2;dist2=calculateDistance2(dot,pos);if(dist2<bestDist2){bestDist2=dist2;bestDot=dot}});if(!bestDot){return[]}dots=[];$.each(graphDots,function(index,dot){var dist2;dist2=calculateDistance2(dot,bestDot.pos);if(dist2<mergeDistance*mergeDistance){dots.push(dot)}});dots.sort(function(a,b){if(a.pos.y!==b.pos.y){return a.pos.y-b.pos.y}return a.pos.x-b.pos.x});return dots}function generatePopupContent(popup,dots){var header,oddsStr;$.each(dots,function(index,dot){var names;if(index>0){$("<div>").addClass("ui divider").appendTo(popup)}header=$("<div>").addClass("power-graph-popup-odds").appendTo(popup);addInfluenceDisplay($("<span>").appendTo(header),dot.influence,20);oddsStr=" - "+String(Math.floor(dot.odds*100))+"%";$("<span>").text(oddsStr).appendTo(header);names=[];$.each(dot.cards,function(index,card){names.push(card.name)});names.sort();$.each(names,function(index,name){$("<div>").addClass("power-graph-popup-cards").text(name).appendTo(popup)})})}function showGraphPopup(container,pos){var anchor,popup,dots,firstDot;dots=findCloseDots(pos);if(!dots.length){hideGraphPopup();return}firstDot=dots[0];if(firstDot===popupDot){return}container=$("#power-graph-div");anchor=$("<div>").addClass("power-graph-popup-anchor").appendTo(container);popup=$("<div>").addClass("power-graph-popup ui custom popup hidden").appendTo(container);generatePopupContent(popup,dots);anchor.css("position","absolute").css("left",String(firstDot.pos.x)+"px").css("top",String(firstDot.pos.y)+"px");anchor.popup({on:"",position:"top center"});hideGraphPopup();anchor.popup("show");graphPopupAnchor=anchor;graphPopup=popup;popupDot=firstDot}function onMouseMove(event){var container,graphX,graphY,graphOffset;container=$("#power-graph-div");graphOffset=container.offset();graphX=event.clientX+window.pageXOffset-graphOffset.left;graphY=event.clientY+window.pageYOffset-graphOffset.top;if(!container.is(":visible")){hideGraphPopup()}else if(graphX<0||graphX>=container.width()||graphY<0||graphY>=container.height()){hideGraphPopup()}else{showGraphPopup(container,{x:graphX,y:graphY})}}tracker.setGraphDots=function(dots){graphDots=dots};$(document).bind("mousemove",onMouseMove);return tracker}function drawPowerGraph(container,graphStyle,deck){var ctx,canvas,canvasWidth,canvasHeight,drawnDots,graphCoord,influenceTurns,allInfluenceTurns,minValue,minDraws,maxDraws,horizontalMidlineStep,verticalMidlineStep,labels;function listAllInfluenceTurns(){var componentPairs,ret;componentPairs={};ret=[];$.each(deck.cards,function(index,card){var components,turn;if(card.influenceRequirements.length<1){return}turn=card.influenceRequirements[0].power;if(turn<1){turn=1}components=card.influenceRequirements[0].listComponents();$.each(components,function(index,component){var componentStr,componentPair,influenceTurn;if(component.power>0){return}componentStr=component.toString();componentPair=componentStr+","+String(turn);if(!componentPairs.hasOwnProperty(componentPair)){influenceTurn={influence:component,turn:turn,cards:[card]};componentPairs[componentPair]=influenceTurn;ret.push(influenceTurn)}else{influenceTurn=componentPairs[componentPair];if(influenceTurn.cards.indexOf(card)<0){componentPairs[componentPair].cards.push(card)}}})});return ret}function listInfluenceTurns(){var componentTurns,ret;componentTurns={};$.each(listAllInfluenceTurns(),function(index,influenceTurn){var influenceStr,turn;influenceStr=influenceTurn.influence.toString();turn=influenceTurn.turn;if(componentTurns.hasOwnProperty(influenceStr)){if(turn<componentTurns[influenceStr]){componentTurns[influenceStr]=turn}}else{componentTurns[influenceStr]=turn}});ret=[];$.each(Object.keys(componentTurns),function(index,componentStr){var influenceTurn={influence:makeInfluence(componentStr),turn:componentTurns[componentStr]};ret.push(influenceTurn)});return ret}function drawLeftLabel(label,y){var drawX,drawY,textSize;textSize=ctx.measureText(label);drawX=graphCoord.left-textSize.width-12;drawY=y+graphStyle.fontSize/2;ctx.fillText(label,drawX,drawY)}function drawBottomLabel(label,x,yOffset){var drawX,drawY,textSize;textSize=ctx.measureText(label);drawX=x-textSize.width/2;drawY=canvasHeight+yOffset;ctx.fillText(label,drawX,drawY)}function drawOutline(){var midline,frac,midpos;ctx.save();ctx.fillStyle=graphStyle.backgroundColor;ctx.beginPath();ctx.moveTo(graphCoord.left,graphCoord.top);ctx.lineTo(graphCoord.left,graphCoord.bottom);ctx.lineTo(graphCoord.right,graphCoord.bottom);ctx.lineTo(graphCoord.right,graphCoord.top);ctx.lineTo(graphCoord.left,graphCoord.top);ctx.fill();ctx.strokeStyle=graphStyle.interiorLineColor;ctx.lineWidth=.75;midline=1-horizontalMidlineStep;while(midline>minValue){frac=(midline-minValue)/(1-minValue);midpos=graphCoord.bottom+frac*(graphCoord.top-graphCoord.bottom);ctx.beginPath();ctx.moveTo(graphCoord.left,midpos);ctx.lineTo(graphCoord.right,midpos);ctx.stroke();midline=midline-horizontalMidlineStep}midline=minDraws;while(midline<=maxDraws){frac=(midline-minDraws)/(maxDraws-minDraws);midpos=graphCoord.left+frac*(graphCoord.right-graphCoord.left);ctx.beginPath();ctx.moveTo(midpos,graphCoord.top);ctx.lineTo(midpos,canvasHeight-graphStyle.fontSize-6);ctx.stroke();midline+=verticalMidlineStep}ctx.strokeStyle=graphStyle.borderColor;ctx.beginPath();ctx.moveTo(graphCoord.left,graphCoord.top);ctx.lineTo(graphCoord.left,graphCoord.bottom);ctx.lineTo(graphCoord.right,graphCoord.bottom);ctx.lineTo(graphCoord.right,graphCoord.top);ctx.lineTo(graphCoord.left,graphCoord.top);ctx.stroke();ctx.restore()}function addGraphLabels(){var midline,percent,x,y;midline=1;while(midline>minValue){y=graphCoord.bottom+(midline-minValue)/(1-minValue)*(graphCoord.top-graphCoord.bottom);percent=Math.round(100*midline);drawLeftLabel(String(percent)+"%",y);midline=midline-horizontalMidlineStep*2}midline=minDraws;while(midline<=maxDraws){x=graphCoord.left+(midline-minDraws)/(maxDraws-minDraws)*(graphCoord.right-graphCoord.left);drawBottomLabel(String(midline-6),x,0);midline+=verticalMidlineStep}}function drawInfluenceIcons(influence,x,y){var text,i,img;if(influence.power>0){text=String(influence.power);ctx.fillText(text,x,y);x+=ctx.measureText(text).width}img=$("#icon-fire").get(0);for(i=0;i<influence.fire;i+=1){ctx.drawImage(img,x,y-graphStyle.iconSize,graphStyle.iconSize,graphStyle.iconSize);x+=graphStyle.iconSize}img=$("#icon-time").get(0);for(i=0;i<influence.time;i+=1){ctx.drawImage(img,x,y-graphStyle.iconSize,graphStyle.iconSize,graphStyle.iconSize);x+=graphStyle.iconSize}img=$("#icon-justice").get(0);for(i=0;i<influence.justice;i+=1){ctx.drawImage(img,x,y-graphStyle.iconSize,graphStyle.iconSize,graphStyle.iconSize);x+=graphStyle.iconSize}img=$("#icon-primal").get(0);for(i=0;i<influence.primal;i+=1){ctx.drawImage(img,x,y-graphStyle.iconSize,graphStyle.iconSize,graphStyle.iconSize);x+=graphStyle.iconSize}img=$("#icon-shadow").get(0);for(i=0;i<influence.shadow;i+=1){ctx.drawImage(img,x,y-graphStyle.iconSize,graphStyle.iconSize,graphStyle.iconSize);x+=graphStyle.iconSize}}function getInfluenceColor(influence){var solidColor,translucentColor;solidColor="rgb(0, 0, 0)";translucentColor="rgba(0, 0, 0, 0.3)";if(influence.fire>0){solidColor=graphStyle.fireColorSolid;translucentColor=graphStyle.fireColorTranslucent}else if(influence.time>0){solidColor=graphStyle.timeColorSolid;translucentColor=graphStyle.timeColorTranslucent}else if(influence.justice>0){solidColor=graphStyle.justiceColorSolid;translucentColor=graphStyle.justiceColorTranslucent}else if(influence.primal>0){solidColor=graphStyle.primalColorSolid;translucentColor=graphStyle.primalColorTranslucent}else if(influence.shadow>0){solidColor=graphStyle.shadowColorSolid;translucentColor=graphStyle.shadowColorTranslucent}return{solid:solidColor,translucent:translucentColor}}function drawInfluenceDot(influence,pos){var influenceColor;influenceColor=getInfluenceColor(influence);ctx.save();ctx.fillStyle=influenceColor.solid;ctx.strokeStyle="rgb(51, 51, 51)";ctx.beginPath();ctx.arc(pos.x,pos.y,graphStyle.dotSize/2,0,2*Math.PI);ctx.fill();ctx.stroke();ctx.restore()}function findInfluenceTurn(influence,turn){var ret=null;$.each(allInfluenceTurns,function(index,influenceTurn){if(!influenceTurn.influence.equals(influence)){return}if(influenceTurn.turn!==turn){return}ret=influenceTurn});return ret}function drawInfluenceCurve(influence,startDraw){var odds,oddsY,draws,dots,x,y,startX,startY,fx,influenceTurn,colors;ctx.save();colors=getInfluenceColor(influence);ctx.strokeStyle=colors.solid;ctx.fillStyle=colors.translucent;ctx.beginPath();ctx.lineWidth=1.5;dots=[];for(draws=startDraw;draws<=maxDraws;draws+=1){odds=deck.drawOdds(draws,influence);oddsY=(odds-minValue)/(1-minValue);fx=(draws-minDraws)/(maxDraws-minDraws);x=graphCoord.left+fx*(graphCoord.right-graphCoord.left);y=graphCoord.bottom+oddsY*(graphCoord.top-graphCoord.bottom);if(draws===startDraw){startX=x;startY=y;ctx.moveTo(x,y)}else{ctx.lineTo(x,y)}influenceTurn=findInfluenceTurn(influence,draws-6);if(influenceTurn){dots.push({influence:influence,pos:{x:x,y:y},draws:draws-7,odds:odds,cards:influenceTurn.cards})}}ctx.stroke();ctx.lineTo(x,graphCoord.bottom);ctx.lineTo(startX,graphCoord.bottom);ctx.lineTo(startX,startY);ctx.fill();ctx.restore();return dots}function drawInfluenceLabel(influence,pos){var x,y,iconSize;iconSize=graphStyle.iconSize*influence.toString().length;x=pos.x-iconSize/2;y=pos.y+graphStyle.iconSize/2;drawInfluenceIcons(influence,x,y)}function drawInfluenceLabels(){var prevX,prevY,minDist;minDist=12;labels.sort(function(a,b){var aPos,bPos,dx,dy;aPos=a.pos;bPos=b.pos;dx=aPos.x-bPos.x;dy=aPos.y-bPos.y;if(dx){return dx}if(dy){return dy}});prevX=0;prevY=0;$.each(labels,function(index,label){var x,y;x=label.pos.x;y=label.pos.y;if(x===prevX&&y-prevY<minDist){y=prevY+minDist}drawInfluenceLabel(label.influence,{x:x,y:y});prevX=x;prevY=y})}function addInfluenceLabel(influence,turn){var pos,mid,odds,oddsY,fx,x,y;pos=(turn-1)/(maxDraws-minDraws);mid=Math.floor(minDraws+pos*(maxDraws-minDraws));odds=deck.drawOdds(mid,influence);oddsY=(odds-minValue)/(1-minValue);fx=(mid-minDraws)/(maxDraws-minDraws);x=graphCoord.left+fx*(graphCoord.right-graphCoord.left);y=graphCoord.bottom+oddsY*(graphCoord.top-graphCoord.bottom);labels.push({influence:influence,pos:{x:x,y:y}})}function drawComponentCurves(){var dots;dots=[];$.each(influenceTurns,function(index,influenceTurn){var newDots;newDots=drawInfluenceCurve(influenceTurn.influence,minDraws+influenceTurn.turn-1);dots=dots.concat(newDots)});$.each(dots,function(index,dot){drawInfluenceDot(dot.influence,dot.pos)});drawnDots=dots;$.each(influenceTurns,function(index,influenceTurn){addInfluenceLabel(influenceTurn.influence,influenceTurn.turn)})}function findGraphExtents(){var odds,maxHorizMidLines,maxVertMidLines;minValue=.75;minDraws=7;maxDraws=15;maxHorizMidLines=10;maxVertMidLines=16;$.each(influenceTurns,function(index,influenceTurn){var draws=influenceTurn.turn+minDraws-1;odds=deck.drawOdds(draws,influenceTurn.influence);if(odds<minValue){minValue=odds}if(draws+4>maxDraws){maxDraws=draws+4}});minValue=(Math.floor(minValue*10)-3)/10;if(minValue<0){minValue=0}verticalMidlineStep=Math.ceil((maxDraws-minDraws)/maxVertMidLines);horizontalMidlineStep=.1*Math.ceil((1-minValue)*10/maxHorizMidLines)}function drawOnCanvas(){canvasWidth=canvas.width();canvasHeight=canvas.height();canvas.attr("width",canvasWidth);canvas.attr("height",canvasHeight);labels=[];ctx=canvas.get(0).getContext("2d");ctx.clearRect(0,0,canvasWidth,canvasHeight);graphCoord={left:graphStyle.marginLeft,top:graphStyle.fontSize/2,right:canvasWidth-graphStyle.marginRight,bottom:canvasHeight-graphStyle.marginBottom};ctx.fillStyle=graphStyle.textColor;ctx.strokeStyle=graphStyle.textColor;ctx.font=String(graphStyle.fontSize)+"px "+graphStyle.font;ctx.lineWidth=1;allInfluenceTurns=listAllInfluenceTurns();influenceTurns=listInfluenceTurns();findGraphExtents();drawOutline();addGraphLabels();drawComponentCurves();drawInfluenceLabels()}function makeCanvas(){container.empty();canvas=$("<canvas>").addClass("power-graph-canvas").appendTo(container);$("#icon-fire").bind("load",drawOnCanvas);$("#icon-time").bind("load",drawOnCanvas);$("#icon-justice").bind("load",drawOnCanvas);$("#icon-primal").bind("load",drawOnCanvas);$("#icon-shadow").bind("load",drawOnCanvas);drawOnCanvas()}makeCanvas();return drawnDots}if(!String.prototype.repeat){String.prototype.repeat=function(count){"use strict";if(this==null){throw new TypeError("can't convert "+this+" to object")}var str=""+this;count=+count;if(count!=count){count=0}if(count<0){throw new RangeError("repeat count must be non-negative")}if(count==Infinity){throw new RangeError("repeat count must be less than infinity")}count=Math.floor(count);if(str.length==0||count==0){return""}if(str.length*count>=1<<28){throw new RangeError("repeat count must not overflow maximum string size")}var rpt="";for(var i=0;i<count;i++){rpt+=str}return rpt}}if(!Object.values){Object.values=function values(object){return Object.keys(object).map(function(key){return object[key]})}}"use strict";function makeOddsWorker(deck,minDraws,maxDraws,onOddsComplete){var worker,influences,influenceIndex,drawIndex,oddsResult,maxWorkTime;influences=deck.listInfluenceRequirements();influenceIndex=-1;drawIndex=maxDraws+1;oddsResult=[];maxWorkTime=5;worker={deck:deck,minDraws:minDraws,maxDraws:maxDraws};function computeStep(){var influence,influenceCard,odds,oddsRow,components,componentOdds;if(drawIndex<=maxDraws){influenceCard=influences[influenceIndex];influence=influenceCard[0];oddsRow=oddsResult[oddsResult.length-1].odds;componentOdds=[];components=influence.listComponents();if(components.length>1){$.each(components,function(index,component){odds=deck.drawOdds(drawIndex,component);componentOdds.push({component:component,odds:odds})})}odds=deck.drawOdds(drawIndex,influence);oddsRow.push({cumulative:odds,components:componentOdds});drawIndex+=1;return false}if(influenceIndex+1<influences.length){influenceIndex+=1;influenceCard=influences[influenceIndex];influence=influenceCard[0];oddsResult.push({power:influence.power,odds:[]});drawIndex=minDraws;return false}return true}function workCallback(){var startTime,now,done;worker.timeoutId=undefined;startTime=performance.now();now=startTime;done=false;while(!done&&now-startTime<maxWorkTime){done=computeStep();now=performance.now()}if(computeStep()){onOddsComplete(oddsResult)}else{worker.timeoutId=setTimeout(workCallback)}}worker.cancel=function(){if(worker.timeoutId){clearTimeout(worker.timeoutId);worker.timeoutId=undefined}};worker.timeoutId=setTimeout(workCallback);return worker}function addInfluenceDisplay(cell,influence,iconSize){var i;function appendInfluenceImage(cell,imageFile){$("<img>").addClass("power-table-influence-icon").attr("src",imageFile).attr("width",iconSize).attr("height",iconSize).appendTo(cell)}if(influence.power>0){cell.text(String(influence.power))}for(i=0;i<influence.fire;i+=1){appendInfluenceImage(cell,"icon-fire.png")}for(i=0;i<influence.time;i+=1){appendInfluenceImage(cell,"icon-time.png")}for(i=0;i<influence.justice;i+=1){appendInfluenceImage(cell,"icon-justice.png")}for(i=0;i<influence.primal;i+=1){appendInfluenceImage(cell,"icon-primal.png")}for(i=0;i<influence.shadow;i+=1){appendInfluenceImage(cell,"icon-shadow.png")}}function generateOddsTable(tableCostDiv,tableOddsDiv,cardLibrary,deck){var minDraws,maxDraws,iconSize;minDraws=7;maxDraws=27;iconSize=20;function generateCostRows(table,deck){var influenceCards,row;row=$("<tr>").addClass("power-table-row-head").appendTo(table);$("<th>").addClass("power-table-head-draws").text("Turns").appendTo(row);influenceCards=deck.listInfluenceRequirements();$.each(influenceCards,function(index,influenceCard){var influence,th,popup,content,cards,lastName;influence=influenceCard[0];cards=influenceCard[1].slice();row=$("<tr>").addClass("power-table-row-body").appendTo(table);th=$("<th>").addClass("power-table-influence").appendTo(row);content=$("<div>").appendTo(th);addInfluenceDisplay(content,influence,iconSize);popup=$("<div>").addClass("ui popup center").appendTo(th);content.popup({position:"top center"});cards.sort(function(a,b){return a.name.localeCompare(b.name)});$.each(cards,function(index,card){if(card.name===lastName){return}$("<div>").addClass("table-cost-popup-content").text(card.name).appendTo(popup);lastName=card.name})})}function generateComponentsPopup(popup,components){var div;$.each(components,function(index,componentOdds){var text,oddsText,component;component=componentOdds.component;oddsText=String(Math.floor(componentOdds.odds*100));if(component.power>0){text=" Power"}else{text=""}text+=" - "+oddsText+"%";div=$("<div>").appendTo(popup);addInfluenceDisplay($("<span>").appendTo(div),component,iconSize);$("<span>").text(text).appendTo(div)})}function generateTableRowsBody(table,oddsValues){$.each(oddsValues,function(index,influenceRow){var oddsRow,power;power=0;oddsRow=$("<tr>").addClass("power-table-row-body").appendTo(table);power=influenceRow.power;$.each(influenceRow.odds,function(index,odds){var oddsText,td,text,popup,popupContent;oddsText=Math.floor(odds.cumulative*100)+"%";td=$("<td>").addClass("power-table-odds").appendTo(oddsRow);text=$("<div>").text(oddsText).appendTo(td);if(odds.components.length){td.bind("mouseenter",function(){popup=$("<div>").text("Influence Odds").addClass("ui popup center odds-popup").appendTo(td);$("<div>").addClass("ui divider").appendTo(popup);popupContent=$("<div>").addClass("odds-popup-content").appendTo(popup);generateComponentsPopup(popupContent,odds.components);text.popup({position:"top center"})});td.bind("mouseleave",function(){text.popup("hide");text.popup("destroy");text.remove("popup")})}if(index+1<power){td.addClass("power-table-odds-shaded")}})});tableCostDiv.css("display","inline");tableOddsDiv.css("display","inline");$("#power-table-loader").removeClass("active")}function generateTableRows(table,deck){var text,row,drawCount;row=$("<tr>").addClass("power-table-row-head").appendTo(table);for(drawCount=minDraws;drawCount<=maxDraws;drawCount+=1){text=String(drawCount-minDraws+1);$("<th>").addClass("power-table-head-draw-count").text(text).appendTo(row)}function onOdds(oddsValues){generateTableRowsBody(table,oddsValues)}$("#power-table-loader").addClass("active");

return makeOddsWorker(deck,minDraws,maxDraws,onOdds)}function generateTable(){var costTable,oddsTable,worker;if(cardLibrary.makeError){return}if(deck.makeError){return}costTable=$("<table>").addClass("power-table");generateCostRows(costTable,deck);oddsTable=$("<table>").addClass("power-table");worker=generateTableRows(oddsTable,deck);tableCostDiv.empty().append(costTable);tableOddsDiv.empty().append(oddsTable);tableCostDiv.css("display","none");tableOddsDiv.css("display","none");return worker}return generateTable()}"use strict";function buildEpcUI(graphStyle){var cardlist,cardLibrary,currentDeck,modifyCardCount,oddsWorker,graphPopupTracker;cardlist=$("#card-list").html();cardLibrary=makeEternalCardLibrary(cardlist);function getCardNameClass(card){var influence;if(card.flags.power){return"card-name"}influence=card.influenceGenerated;if(!influence||influence.isEmpty()){return"card-name"}if(influence.fire>0&&influence.time===0&&influence.justice===0&&influence.primal===0&&influence.shadow===0&&influence.wild===0){return"card-name fire"}if(influence.time>0&&influence.fire===0&&influence.justice===0&&influence.primal===0&&influence.shadow===0&&influence.wild===0){return"card-name time"}if(influence.justice>0&&influence.time===0&&influence.fire===0&&influence.primal===0&&influence.shadow===0&&influence.wild===0){return"card-name justice"}if(influence.primal>0&&influence.time===0&&influence.justice===0&&influence.fire===0&&influence.shadow===0&&influence.wild===0){return"card-name primal"}if(influence.shadow>0&&influence.time===0&&influence.justice===0&&influence.primal===0&&influence.fire===0&&influence.wild===0){return"card-name shadow"}return"card-name multi"}function buildDeckRow(row,deck,card,cardcount){var name,nameClass,count,countstr,cardid,addButton,subButton;name=cardcount.name;count=cardcount.count;countstr=String(count);cardid=cardcount.id;nameClass=getCardNameClass(card);$("<div>").addClass(nameClass).text(name).appendTo(row);$("<div>").addClass("card-count").text(countstr).appendTo(row);subButton=$("<button>").addClass("ui compact button").text("-").appendTo(row);addButton=$("<button>").addClass("ui compact button").text("+").appendTo(row);addButton.bind("click",function(){modifyCardCount(deck,cardid,count+1)});subButton.bind("click",function(){modifyCardCount(deck,cardid,count-1)})}function buildDeckRows(deck){var powerRows,nonpowerRows,row;powerRows=$("#deck-edit-power-rows");powerRows.empty();nonpowerRows=$("#deck-edit-nonpower-rows");nonpowerRows.empty();$.each(deck.cardlist,function(index,cardcount){var card,cardid;cardid=cardcount.id;card=cardLibrary.cards[cardid];row=$("<div>").addClass("card-count-edit");if(card&&card.flags.power){row.appendTo(powerRows)}else{row.appendTo(nonpowerRows)}buildDeckRow(row,deck,card,cardcount)});if(powerRows.children().length){$("#deck-edit-power-title").css("display","block")}else{$("#deck-edit-power-title").css("display","none")}if(nonpowerRows.children().length){$("#deck-edit-nonpower-title").css("display","block")}else{$("#deck-edit-nonpower-title").css("display","none")}}function setInfluenceCount(numberDiv,count){numberDiv.text(count);if(count){numberDiv.removeClass("zero")}else{numberDiv.addClass("zero")}}function generateInfluencePanel(deck){var count,power,fire,time,justice,primal,shadow,wild;count=deck.cards.length;power=0;fire=0;time=0;justice=0;primal=0;shadow=0;wild=0;$.each(deck.cards,function(index,card){var influence;influence=card.influenceGenerated;power+=influence.power;fire+=influence.fire;time+=influence.time;justice+=influence.justice;primal+=influence.primal;shadow+=influence.shadow;wild+=influence.wild});if(fire){fire+=wild}if(time){time+=wild}if(justice){justice+=wild}if(primal){primal+=wild}if(shadow){shadow+=wild}$("#card-count-number").text(String(count));$("#power-sources-number").text(String(power));setInfluenceCount($("#fire-sources-number"),fire);setInfluenceCount($("#time-sources-number"),time);setInfluenceCount($("#justice-sources-number"),justice);setInfluenceCount($("#primal-sources-number"),primal);setInfluenceCount($("#shadow-sources-number"),shadow)}function generatePowerTypeCounts(deck){$(".power-type-count").each(function(index,div){var flag,count;count=0;flag=$(div).attr("tag");$.each(deck.cards,function(cardIndex,card){if(card.flags[flag]){count+=1}});$(div).text(String(count))})}function onDeckChange(deck){var decklist,dots;currentDeck=deck;decklist=currentDeck.generateDecklist(false);try{localStorage.setItem("decklist",decklist)}catch(ignore){}if(oddsWorker){oddsWorker.cancel()}oddsWorker=generateOddsTable($("#power-table-cost-div"),$("#power-table-odds-div"),cardLibrary,deck);dots=drawPowerGraph($("#power-graph-div"),graphStyle,deck);graphPopupTracker.setGraphDots(dots);generateInfluencePanel(deck);generatePowerTypeCounts(deck);buildDeckRows(deck)}modifyCardCount=function(deck,cardid,count){var modifiedList,modifiedDeck;modifiedList=[];$.each(deck.cardlist,function(index,cardcount){if(cardcount.id===cardid){if(count>=0){modifiedList.push({id:cardcount.id,name:cardcount.name,count:count})}}else{modifiedList.push(cardcount)}});modifiedDeck=makeEternalDeck(cardLibrary,modifiedList);onDeckChange(modifiedDeck)};function validateImportDeck(){var deck;deck=makeEternalDeckFromString(cardLibrary,$("#import-modal-deck").val());if(deck.makeError){$("#import-validation-result").text(deck.makeError);$("#import-modal-import-button").addClass("disabled")}else{$("#import-validation-result").text("");$("#import-modal-import-button").removeClass("disabled")}}function onDeckImport(){var deck;deck=makeEternalDeckFromString(cardLibrary,$("#import-modal-deck").val());onDeckChange(deck)}function onDeckExport(){var decklist,input;decklist=currentDeck.generateDecklist(true);input=$("<textarea>").appendTo($("body")).val(decklist).select();document.execCommand("copy");input.remove()}function onDeckClear(){var deck;deck=makeEternalDeckFromString(cardLibrary,"");onDeckChange(deck)}function onAddCard(dropdownOption){var cards,deck,cardid;cardid=dropdownOption.val();if(!cardid.length){return}cards=currentDeck.cardlist.slice();cards.push({id:cardid,name:dropdownOption.text(),count:1});deck=makeEternalDeck(cardLibrary,cards);onDeckChange(deck)}function onLoad(){var importButton,importPopupActive;if(cardLibrary.makeError){$("#card-list-error-text").text(cardLibrary.makeError);$("#card-list-error-modal").modal("show");return}if(!currentDeck.cards.length){importPopupActive=true;importButton=$("#import-button");importButton.popup("show");$(window).bind("click",function(){if(importPopupActive){importButton.popup("hide");importPopupActive=false}})}onDeckChange(currentDeck)}function bindButtons(){$(window).bind("load",onLoad);$(".menu-help-icon").popup({position:"top right",offset:6});$("#import-button").popup({on:""});$("#import-button").bind("click",function(){$("#import-modal-deck").val("").select();$("#import-modal").modal("show")});$("#import-modal-deck").bind("input",function(){validateImportDeck()});$("#export-button").popup({on:"click"});$("#export-button").bind("click",function(){onDeckExport()});$("#about-heading").bind("click",function(){$("#about-modal").modal("show")});$("#add-card-button").bind("click",function(){$("#add-card-dropdown").dropdown("clear");$("#add-card-modal").modal("show")});$("#clear-button").popup({on:"click"});$("#clear-button").bind("click",function(){onDeckClear();$("#clear-button").popup("reposition")});$("#import-modal-import-button").bind("click",function(){onDeckImport()});$("#add-card-modal-add-button").bind("click",function(){onAddCard($("#add-card-dropdown option:selected"))});$("#power-table-container").css("display","none");$("#graph-menu-item").bind("click",function(){$("#power-graph-container").css("display","inline");$("#power-table-container").css("display","none");$("#graph-menu-item").addClass("active");$("#table-menu-item").removeClass("active")});$("#table-menu-item").bind("click",function(){$("#power-graph-container").css("display","none");$("#power-table-container").css("display","inline");$("#graph-menu-item").removeClass("active");$("#table-menu-item").addClass("active")})}function gatherCards(){var dropdown,cardnames,cardids;$(".ui.dropdown").dropdown();dropdown=$("#add-card-dropdown");cardnames=[];cardids={};$.each(Object.values(cardLibrary.cards),function(index,card){cardnames.push(card.name);cardids[card.name]=card.id});cardnames.sort();$.each(cardnames,function(index,name){var cardid;cardid=cardids[name];$("<option>").val(cardid).text(name).appendTo(dropdown)})}function getDeckFromStorage(){var decklist;decklist="";try{if(localStorage){decklist=localStorage.getItem("decklist")}}catch(ignore){}if(!decklist){decklist=""}currentDeck=makeEternalDeckFromString(cardLibrary,decklist);if(currentDeck.makeError){currentDeck=makeEternalDeckFromString(cardLibrary,"")}}graphPopupTracker=makeGraphPopupTracker();getDeckFromStorage();onDeckChange(currentDeck);bindButtons();gatherCards()}